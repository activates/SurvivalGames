package us.thetaco.survivalgames.utils;

import org.bukkit.ChatColor;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;

/** A class housing all of the language values for the plugin which are loaded from the Language.yml 
 * (Thanks gomeow for the tutorial!)
 * @author activates
 *
 */
public enum Language {

	GAME_STARTING_TIMER("game-start-timer", "&e{NUMBER}&a seconds until the game starts"),
	TIMER_ENDING("timer-ending", "&aThe game in '&e{ARENA}&a' has been closed by the timer! There were no victors"),
	LOBBY_ABANDONED("lobby-abandoned", "The lobby for '{ARENA}' was abandoned, so it has been disabled"),
	LOBBY_TIMER_CANCELLED("lobby-timer-cancelled", "&cThe lobby timer has been stopped since the player count dropped below the minimum to start the game!"),
	LOBBY_TIMER_STARTED("lobby-timer-started",  "&aThe lobby timer has started since enough players have joined!"),
	LOBBY_STARTING_TIMER("lobby-start-timer", "&e{NUMBER} &auntil the game starts"),
	LOBBY_ENDED("lobby-ended", "&aThe game is starting... Good luck!"),
	NO_CONSOLE_SUPPORT("no-console-support", "You can only manage arenas from in-game commands!"),
	ALREADY_IN_CREATION_MODE("already-in-creation-mode", "&cYou cannot do this while in creation mode! To exit, simply type: exit"),
	NO_PERMISSION("no-permission", "&cYou don't have the required permissions to do this!"),
	NO_ARENA_SPECIFIED("no-arena-specified", "&cYou must specify an arena name!"),
	ALPHA_NUMERIC_REQUIRED("alpha-numeric-required", "&cAll arena-names must be alpha-numeric!"),
	ARENA_ALREADY_EXISTS("arena-already-exists", "&cThis arena already exists, please use the 'update' subcommand"),
	ARENA_NOT_FOUND("arena-not-found", "&cThe specified arena couldn't be found. For a list of loaded arenas, do /hgarena list"),
	IN_UPDATE_MODE("in-update-mode", "&eYou are now in the update mode!{NEWLINE}&aAll the specfied arena's information has been loaded into the created, so just change what you want too then type finish"),
	RELOADING_VALUES("reloading-values", "&aReloading the values from the configuration file!"),
	SPECTATING_DISABLED("spectating-disabled", "&cThis server has spectating disabled"),
	IN_ARENA_CANT_SPECTATE("in-arena-cant-spectate", "&cYou are currently playing in an arena, so you cannot spectate!"),
	SUCESSFULLY_REMOVED("sucessfully-removed", "&aYou have been removed from the arena!"),
	UNSUCESSFULLY_REMOVED("unsucessfully-removed", "&cUnable to remove you as a spectator!"),
	UNACTIVE_ARENA_FAILED_SPECTATION("unactive-arena-failed-spectator", "&cThis arena is not in session, so it cannot be spectated!"),
	AT_SPECTATOR_LIMIT("at-spectator-limit", "&cThis arena has already reached its spectator limit!"),
	ADDED_AS_SPECTATOR("added-as-spectator", "&aYou have been added as a spectator to the arena: &e{ARENA}"),
	ARENA_CREATE_START_MESSAGE("arena-create-start-message", "&eYou have been put into arena-creation mode{NEWLINE}"
			+ "&aTo set a spawn point, simply stand in the spot AND position of the spawn-point you want, then type in &esetspawn{NEWLINE}"
			+ "&aYou can do this as many times as you want.. the arena-size is technically unlimited{NEWLINE}"
			+ "&aType &efinish&a to save the created arena{NEWLINE}"
			+ "&aType &eexit&a to cancel arena-creation mode"),
	ARENA_DELETED("arena-deleted", "&aThe specified arena '&e{ARENA}&a' has been removed"),
	ALREADY_IN_ARENA("already-in-arena", "&cYou are already in an arena! Type /hgarena leave to leave the current game you are in"),
	ARENA_NOT_JOINABLE("arena-not-joinable", "&cThe specified arena is already active, so no more players can join at this time. To spectate the specified arena, type: /hgarena spectate {ARENA}"),
	ARENA_FULL("arena-full", "&cThis arena has already reached full capacity! To spectate type /hgarena spectate {ARENA}"),
	ADDED_TO_ARENA("added-to-arena", "&aYou have been added to the arena.. Good luck!"),
	JOIN_BROADCAST("join-broadcast",  "&e{PLAYER} &ahas joined the arena!"),
	LEAVE_BROADCAST("leave-broadcast", "&e{PLAYER} &ahas left the arena!"),
	LOW_PLAYER_COUNT_GAME_CANCELLED("game-cancelled-low-player-count", "&The game has been cancelled due to the player count dropping below the minimum!"),
	LOW_PLAYER_COUNT_GAME_NOT_CANCELLED("low-player-count-not-cancelled", "&cThe player count has dropped below the minium, but the game was not cancelled!"),
	UNABLE_TO_REMOVE("unable-to-remove", "&cUnable to remove you from the game"),
	LOADED_ARENAS_HEADER("loaded-arenas-header", "=============(Loaded-Arenas)============="),
	FILE_RETRIEVAL_ERROR("file-retrieval-error", "There was an error while trying to work with arena file information. Reason: "),
	MP_COUNT_NOT_FOUND("mp-count-not-found", "The minimum player count set in the arena file is not a number or is missing! Return default value!"),
	NEW_CONFIG_GENERATED("new-config-generated", "This file was generated by the SurvivalGames plugin.. Do not edit by hand"),
	ARENA_ADDED("arena-added", "Adding arena to active memory"),
	CONFIG_FILE_ERROR("config-file-error", "There was an error in creating the configuration file! Reason: "),
	INVENTORY_SERIALIZATION_ERROR("inventory-serialization-error", "There was an error while writing to the inventory file for: "),
	USING_DEFAULT_VALUES("using-default-vaules", "Using default values"),
	CREATION_MODE_DISABLED("creation-mode-disabled", "Arena creation mode has been disabled"),
	SPAWN_SET_NUMBER("spawn-set-number", "Set spawn-point #{NUMBER}"),
	MP_COUNT_NOT_SET("mp-count-not-set", "&cThe minimum player count has not been set!{NEWLINE}"
			+ "&cTo do this, type: setmpcount <someNumber>"),
	MP_COUNT_INVALID("mp-count-invalid", "&cThe minimum player count is invalid! It must be less than or equal to the amount of spawns created!{NEWLINE}"
			+ "&cEither create more spawn points or lower the minimum player count"),
	ARENA_CREATION_FINISHED("arena-creation-finished", "&aFinishing up arena creation and storing the information in a file"),
	NO_SPAWNS_DEFINED("no-spawns-defined", "&cNo spawns were defined! The arena was not created"),
	NO_LOBBY_DEFINED("no-lobby-defined", "&cNo lobby location was defined! To define it, stand in the location and position you want the lobby to be in, then type:"
			+ "&esetlobby"),
	NO_LOBBY_TIME("no-lobby-time", "No lobby time has been set. To set it, type:{NEWLINE}"
			+ "&csetlobbytime 5h 1m 31s{NEWLINE}"
			+ "&cYou don't have to define hours, minutes, and seconds, but you have to define at least 1"),
	NO_ARENA_TIME("no-arena-time", "&cNo arena time has been set. To set it, type:{NEWLINE}"
			+ "&csetarenatime 5h 1m 31s"
			+ "&cYou don't have to define hours, minutes, and seconds, but you have to define at least 1"),
	MP_COUNT_ERROR("mp-count-error", "The minimum player count must at least be 1"),
	MP_COUNT_WRONG_ARGS("mp-count-wrong-args", "{OBJECT} was given, but a number is expected"),
	MP_COUNT_SET("mp-count-set", "Minimum player count set to {NUMBER}"),
	LOBBY_SET("lobby-set", "Lobby set at your current location!"),
	LOBBY_TIME_SET_ERROR("lobby-time-set-error", "&cYou must specify the amount of time the lobby will last!{NEWLINE}"
			+ "&cFor example, you would type: setlobbytime 2m 60s{NEWLINE}"
			+ "&cThat would set the lobby time to 2 minutes and 60s"),
	TIME_UNPARSEABLE("time-unparseable", "&cAn invalid input was given! Type types you can use are: h, m, and s.{NEWLINE}"
			+ "&cFor example: you can type '2h 5m' for a 2 hour and 5 minute game"),
	LOBBY_TIME_SET("lobby-time-set", "&aThe lobby time has been set"),
	ARENA_TIME_SET("arena-time-set", "&aThe arena time has been set"),
	UNKNOWN_COMMAND("unknown-command", "&cUnknown command"),
	ARENA_TIME_SET_ERROR("arena-time-set-error", "&cYou must specify the amount of time an arena will last!{NEWLINE}"
			+ "&cFor example, you would type: setlobbytime 2m 60s{NEWLINE}"
			+ "&cThat would set the lobby time to 2 minutes and 60s"),
	COMMAND_DISALLOWED("command-disallowed", "&cYou are not able to run this command while playing in an arena!"),
	DIED_WHILE_SPECTATING("died-while-spectating", "&cFor some reason.. You died while spectating, so you have been removed as a spectator"),
	KILLED_AND_REMOVED("killed-and-removed", "&e{OBJECT} &ahas been killed and was removed from the game!"),
	GAME_WON("game-won", "&e{PLAYER} &ahas won the game in arena: &e{ARENA}"),
	DEAD_BUT_DISCONNECTED("dead-but-disconnected", "&e{PLAYER} &ais dead, but has disconnected from the game!"),
	ARENA_ABANDONED("arena-abandoned", "&aArena '&e{ARENA}' &ahas been abandoned, so the game has been cancelled"),
	INVENTORY_RESTORING("inventory-restored", "&aYour inventory will be returned in five seconds!"),
	SPAWN_TELEPORT_ERROR("spaw-teleport-error", "&cThere was an error while trying to teleport you to a spawn location. Reason: Teleport location NULL"),
	LOGGER_PREFIX("logger-prefix", "[SG] "),
	GAME_STARTED("game-started", "&aThe real game has started"),
	ERROR_SAVING_REPUTATION("error-saving-reputation", "There was an error while modifying the reputation file!"),
	DEATH_REP_EARNED("death-reputation-earned", "&aYou stayed in the game long enough to earn a +1 reputation point!"),
	DEATH_REP_NOT_EARNED("death-reputation-not-earned", "&cYou were not in the game long enough to earn any reputation."),
	DISCONNECTING_HARMED_REP("disconnecting-harmed-ret", "&e{PLAYER} &ahas had -1 added to their reputation for disconnecting during an active game!"),
	LEAVING_HARMED_REP("leaving-harmed-ret", "&e{PLAYER} &ahas had -1 added to their reputation for leaving during an active game!"),
	REP_INCREASED_GAME_COMPLETED("rep-increased-game-completed", "&a+1 has been added to your reputation for completing the game in arena: &e{ARENA}"),
	REP_SET_WRONG_ARGS("rep-set-wrong-args", "&cYou didn't specify what the minimum rep is! The correct syntax is:{NEWLINE}&esetrequiredrep <someNumber>"),
	REP_INCORRECT_ARGS("rep-set-incorrect-args", "&c{OBJECT} was given, but a number is expected"),
	REP_SET_SUCESSFULL("rep-set-sucessfull", "&aThe required reputation has been sucessfully set!"),
	MINIMUM_REP_NOT_SET("minimum-rep-not-set", "&cThe minimum reputation has not been set. To do that, type:{NEWLINE}&esetrequiredrep <someNumber>"),
	REPUTATION_TOO_LOW("reputation-too-low", "&aYou do not have enough reputation to play in this arena!"),
	CENTER_LOCATION_NOT_SET("center-location-not-set", "&cYou have not set the center of the arena! Move to the center of the arena and type:{NEWLINE}"
			+ "&esetcenter"),
	CENTER_LOCATION_SET("center-location-set", "&aThe center location has been set at your current location"),
	CENTER_LOCATION_MUST_BE_SET_RADIUS("center-location-not-set-radius", "&cYou must set the center location if you want the plugin to automatically determine the distance from"
			+ "the center to your current location. If you're too lazy to do that, just manually type in the distance:{NEWLINE}"
			+ "&esetradius &a<radius>"),
	NON_NUMBER_DEFINED("non-number-defined", "&cA number was expected, but {OBJECT} was given instead"),
	ARENA_RADIUS_SET("arena-radius-set", "&aThe arena radius has been set to &e{NUMBER}"),
	WORLDS_DONT_MATCH("worlds-dont-match", "&cThe world of the arena center and your location do not match!"),
	ARENA_RADIUS_NOT_SET("arena-radius-not-set", "&cThe arena's radius has not been set, do to this, type:{NEWLINE}"
			+ "&esetradius [number]"),
	NO_PLAYER_SPECIFIED("no-player-specified", "&aYou must specify a player!"),
	PLAYER_NOT_FOUND("player-not-found", "&aThe requested player '{OBECT}' could not be found!"),
	KICK_BROADCAST_MESSAGE("kick-broadcast-message", "&e{PLAYER} &a has been kicked from the game!"),
	KICK_MESSAGE("kick-message", "&cYou have been kicked from the game in {ARENA}"),
	KICK_SUCCESS("kick-success", "&e{PLAYER} &ahas been kicked from the game in '{ARENA}' sucessfully"),
	NOTHING_TO_KICK_FROM("nothing-to-kick-from", "&e{PLAYER} &cis not in any type of arena, so they cannot be kicked"),
	GAME_WON_KICK("game-won-kick", "&e{OBJECT} &ahas won the game in arena: &e{ARENA}");
	
	
    private String path;
    private String def;
    private static YamlConfiguration LANG;
	
    Language(String path, String start) {
        this.path = path;
        this.def = start;
    }
	
    /** Used to set the location of the language file
     * @param config
     */
    public static void setFile(YamlConfiguration config) {
        LANG = config;
    }
    
    /** Used to get the default stored in here
     * @return The default value of the message
     */
    public String getDefault() {
        return this.def;
    }
    
    /** Used to get the YAML path
     * @return A string version of the YAML path
     */
    public String getPath() {
        return this.path;
    }
    
    @Override
    public String toString() {
    	
    	String toEdit = LANG.getString(this.path, def);
    	
    	toEdit = toEdit.replace("{NEWLINE}", "\n");
    	toEdit = ChatColor.translateAlternateColorCodes('&', toEdit);
    	
        return toEdit;
        
    }
    
    /** Used to parse additional information that a message could require. Set a value to null if not needed
     * @param arenaName An arena name to set
     * @param player A player to set the name from
     * @param number A number of some sort (int)
     * @return Will return the newly parsed String
     */
    public String toString(String arenaName, Player player, Integer number, Object obj) {
    	
    	String toEdit = LANG.getString(this.path, def);
    	
    	if (arenaName != null) {
    		
    		toEdit = toEdit.replace("{ARENA}", arenaName);
    		
    	}
    	
    	if (player != null) {
    		
    		toEdit = toEdit.replace("{PLAYER}", player.getName());
    		
    	}
    	
    	if (number != null) {
    		
    		toEdit = toEdit.replace("{NUMBER}", Integer.toString(number));
    		
    	}
    	
    	if (obj != null) {
    		
    		toEdit = toEdit.replace("{OBJECT}", (String) obj);
    		
    	}
    	
    	toEdit = toEdit.replace("{NEWLINE}", "\n");
    	toEdit = ChatColor.translateAlternateColorCodes('&', toEdit);
    	
    	return toEdit;
    	
    }
    
}
